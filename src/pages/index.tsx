import styles from "./index.module.css";
import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";
import { Card, Image, Text, Badge, Button, Group } from "@mantine/core";

import { api } from "~/utils/api";

// https://i.imgur.com/tnuKXQf.png
// https://i.imgur.com/zGaB4zf.png

const Home: NextPage = () => {
  const hello = api.example.hello.useQuery({ text: "from tRPC" });
  const all = api.example.getAll.useQuery();
  console.log("all", all.data);
  console.log("hello", hello.data);

  const goals = api.goals.getAll.useQuery();
  console.log("goals", goals.data);
  return (
    <>
      <Head>
        <title>Create T3 App for Mia</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.container}>
          <h1 className={styles.title}>
            Yay, finally here! Create{" "}
            <span className={styles.pinkSpan}>T3</span> App
          </h1>
          <div className={styles.cardRow}>
            <Link
              className={styles.card}
              href="https://create.t3.gg/en/usage/first-steps"
              target="_blank"
            >
              <h3 className={styles.cardTitle}>First Steps →</h3>
              <div className={styles.cardText}>
                Just the basics - Everything you need to know to set up your
                database and authentication.
              </div>
            </Link>
            <Link
              className={styles.card}
              href="https://create.t3.gg/en/introduction"
              target="_blank"
            >
              <h3 className={styles.cardTitle}>Documentation →</h3>
              <div className={styles.cardText}>
                Learn more about Create T3 App, the libraries it uses, and how
                to deploy it.
              </div>
            </Link>
          </div>
          <div className={styles.showcaseContainer}>
            <p className={styles.showcaseText}>
              {hello.data ? hello.data.greeting : "Loading tRPC query..."}
            </p>
            <AuthShowcase />
          </div>
          <h1 className={styles.title}>My Goals</h1>
          {goals?.data?.map((goal) => (
            <Card shadow="sm" padding="lg" radius="md" withBorder key={goal.id}>
              <Card.Section>
                <Image src={goal.image} height={160} alt={goal.name} />
              </Card.Section>

              <Group position="apart" mt="md" mb="xs">
                <Text weight={500}>{goal.name}</Text>
                <Badge
                  color={goal.completion === 1 ? "green" : "orange"}
                  variant="light"
                >
                  Progress: {goal.completion * 100} %
                </Badge>
              </Group>

              <Text size="sm" color="dimmed">
                {goal.description}
              </Text>
              <Group position="apart">
                <Button
                  variant="light"
                  color="blue"
                  mt="sm"
                  radius="md"
                  size="xs"
                >
                  Edit
                </Button>
                <Button
                  variant="light"
                  color="blue"
                  mt="md"
                  radius="md"
                  size="xs"
                >
                  Add Progress
                </Button>
                <Button
                  variant="light"
                  color="violet"
                  mt="md"
                  radius="md"
                  size="xs"
                >
                  Complete
                </Button>
                <Button
                  variant="light"
                  color="blue"
                  mt="md"
                  radius="md"
                  size="xs"
                >
                  Delete
                </Button>
              </Group>
            </Card>
          ))}
          <Button
            variant="light"
            color="green"
            mt="md"
            radius="md"
            size="sm"
            onClick={() => {}}
          >
            Add
          </Button>
        </div>
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <div className={styles.authContainer}>
      <p className={styles.showcaseText}>
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className={styles.loginButton}
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
